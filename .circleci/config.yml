version: 2.1

commands:
  aws-config:
    description: "create credentials file for aws"
    steps:
      - run:
          name: Create credentials file for aws
          command: |
            mkdir ~/.aws
            echo [default] >> ~/.aws/credentials
            echo aws_secret_access_key = $AWS_SECRET_ACCESS_KEY  >> ~/.aws/credentials
            echo aws_access_key_id = $AWS_ACCESS_KEY_ID  >> ~/.aws/credentials
            echo source_profile = default  >> ~/.aws/credentials
            echo region = $AWS_DEFAULT_REGION  >> ~/.aws/credentials

jobs:
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:2.1
    steps:
      - checkout
      - run:
          name: Restore
          command: dotnet restore src/estate-cloud-contacts-service/estate-cloud-contacts-service.csproj
      - run:
          name: Build
          command: dotnet build src/estate-cloud-contacts-service/estate-cloud-contacts-service.csproj --configuration $BUILD_CONFIGURATION
      - run:
          name: Test
          command: dotnet test test/estate-cloud-contacts-service.Tests/estate-cloud-contacts-service.Tests.csproj --configuration $BUILD_CONFIGURATION /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger:trx --results-directory ./test-results/
      - store_test_results:
          path: ./test-results
      - persist_to_workspace:
          root: src
          paths:
            - estate-cloud-contacts-service

  deploy:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:2.1
    steps:
      - attach_workspace:
          at: src
      - run:
          name: Install Lambda Tools
          command: dotnet tool install -g Amazon.Lambda.Tools
      - aws-config
      - run:
          name: List Lambda Tools
          command: cd /root/.dotnet/tools
      - run:
          name: Deploy Stack to AWS
          command: dotnet lambda deploy-serverless --project-location src/estate-cloud-contacts-service --stackname estate-cloud-contacts-service --profile personal --region $AWS_DEFAULT_REGION --s3-bucket $AWS_ARTIFACT_BUCKET

orbs:
  slack: circleci/slack@3.4.2

workflows:
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
      - slack/approval-notification:
          message: Pending approval
          webhook: $IWT_SMARTA_DEVOPS_WEBHOOK
          requires:
            - build
            - deploy
          filters:
            branches:
              only: master
